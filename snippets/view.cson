'.source.coffee':


  'Ember.View.extend(...':
    'prefix': 'emView'
    'body':
      """
        _export = Ember.View.extend(
          ${1}
        )
      """




  'Ember.TextField.extend(...':
    'prefix': 'emView.TextField'
    'body':
      """
        Ember.TextField.extend
          ${1:#logic...}
      """




  'Ember.TextArea.extend(...':
    'prefix': 'emView.TextArea'
    'body':
      """
        Ember.TextArea.extend
          ${1:#logic...}
      """




  'Ember.Checkbox.extend(...':
    'prefix': 'emView.Checkbox'
    'body':
      """
        Ember.Checkbox.extend
          ${1:#logic...}
      """




  'Ember.Select.extend(...':
    'prefix': 'emView.Select'
    'body':
      """
        Ember.Select.extend
          ${1:#logic...}
      """




  'eventManager: ...':
    'prefix': 'emView.eventManager'
    'body':
      """
        eventManager: Ember.Object.create(
          ${1:event} :
            ${2:#logic...}
        )
      """




  'tagName : null':
    'prefix': 'emView.tagN'
    'body':
      """
        tagName: '${1:div}'
        ${2}
      """




  'attributeBindings : [...':
    'prefix': 'emView.attrB'
    'body':
      """
        attributeBindings: ['${1:prop}:${2:attr}']
        ${1:prop}
      """




  'classNames : [...':
    'prefix': 'emView.classN'
    'body':
      """
        classNames: ['${1:class-1}','${2:class-2}']
        ${2}
      """




  'classNameBindings : [...':
    'prefix': 'emView.classNB'
    'body':
      """
        classNameBindings: ['${1:property_1:TruthyClass:FalsyClass}']
        ${2:property_1} : ${3:true}
      """




  'isVisible : null':
    'prefix': 'emView.isVisible'
    'body':
      """
        isVisible: ${1:null}
      """



  'Ember View Hook':
    'prefix': 'emView.e.willInsertElement'
    'body':
      """
        willInsertElement: ->
          ${1:#logic...}
      """



  'Ember View Hook':
    'prefix': 'emView.e.didInsertElement'
    'body':
      """
        didInsertElement: ->
          ${1:#logic...}
      """



  'Ember View Hook':
    'prefix': 'emView.e.willDestroyElement'
    'body':
      """
        willDestroyElement: ->
          ${1:#logic...}
      """



  'Ember View Hook':
    'prefix': 'emView.e.parentViewDidChange'
    'body':
      """
        parentViewDidChange: ->
          ${1:#logic...}
      """



  'Ember View Hook':
    'prefix': 'emView.e.willClearRender'
    'body':
      """
        willClearRender: ->
          ${1:#logic...}
      """
